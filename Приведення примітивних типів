Існує два типи приведення:

Висхідне або автоматичне (Widening Casting)
Низхідне, або явне (Narrowing Casting)

Дано метод public int casteDoubleToInt(double value), який приймає на вхід число типу double, приводить його до типу int та повертає з методу.
Проте зараз метод працює не коректно. Допоможи виправити помилку, виконай явне приведення типів.

public class FixNarrowingCasting {
  public int casteDoubleToInt(double value) {
    int result =(int) value; // fix this line, cast double to int manually
    return result;
  }
}



Сьогодні на практиці дізнаємося, яким чином потрібно здійснювати приведення типів.
Дано метод declareCastedVariables(short s, long l) який приймає на вхід два параметри: short s та long l.
В середині методу створи дві нові змінні типу int: shortInt та longInt.
Для створених змінних shortInt і longInt потрібно присвоїти значення змінних s (виконай автоматичне приведення типів) та l (виконай явне приведення типів) відповідно

public void declareCastedVariables(short s, long l) {
  //Write code below this line
int shortInt = s;
int longInt = (int) l;
  //Write code above this line
}


В Mate bank є можливість покласти гроші на депозит під певний відсоток на 1 рік і отримати прибуток через деякий час.
Наприклад, якщо покласти 9550 під 3% річних, отримаємо:
9550 + 3% = 9836.5 // 9550 + 9550 * 0.03
Чистий прибуток = 9836.5 - 9550 = 286.5
Напиши метод calculateProfit, який приймає два параметри:
double amount - початкова сума, яку ми кладемо на депозит;
double percent - річна відсоткова ставка (вказано коефіцієнт);
Метод повинен розрахувати і повернути суму чистого прибутку. Ми будемо перевіряти тільки цілу частину, тому тобі потрібно буде відкинути дробову частку, це можна зробити за допомогою явного приведення типів - порахуй прибуток в double та приведи до int.

Приклади:

calculateProfit(1000.0, 0.05) == 50
calculateProfit(12550.0, 0.03) == 376


public class BankDeposit {
  public static int calculateProfit(double amount, double percent) {
    double res = amount * percent;
  
    return (int)res;
    //Write code above this line
  }
}



